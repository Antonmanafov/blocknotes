{"version":3,"sources":["redux/actions/actionstypes.js","redux/reducers/notesReducer.js","redux/actions/actions.js","redux/blocknotes-saga.js","redux/users-saga.js","redux/store/store.js","components/NavigationBar.js","components/fetchCreator.js","components/blocknotes/FormBlocknotes.js","components/blocknotes/BlocknoteCard.js","components/blocknotes/ListBlocknotes.js","components/blocknotes/PageBlocknotes.js","components/blocknotes/AddCard.js","components/blocknotes/TagsForCardsList.js","components/blocknotes/Card.js","components/blocknotes/Cardslist.js","components/Loader3.js","components/AllCardsList.js","components/PrivateRoute.js","components/NoPrivateRoute.js","components/Login.js","components/Registration.js","components/Logout.js","components/MyCabinet.js","components/Mainpage.js","components/App.js","index.js"],"names":["LOADING","LOGOUT","SAGALOGOUT","AUTHENTICATED","SAGAAUTHENTICATED","SAGAREGISTRATION","UPDATE_USERINFO","SAGA_UPDATE_USERINFO","CHANGE_BLOCKNOTESLIST","SAGA_CHANGE_BLOCKNOTELIST","DELETE_BLOCKNOTE","SAGA_DELETE_BLOCKNOTE","EDIT_BLOCKNOTE","SAGA_EDIT_BLOCKNOTE","SAGA_ADD_CARD","UPDATE_BLOCKNOTE_AND_CARDS","SAGA_DELETE_CARD","SAGA_EDIT_CARD_BODY","SAGA_EDIT_CARD_HEAD","SAGA_REMOVE_TAG","notesReducer","state","action","type","loading","payload","user","username","firstname","lastname","age","aboutMe","cards","blocknotes","map","bl","id","isAuth","authenticated","updateBlocknotesAndCards","sagaAuthenticated","sagaRegistration","sagaUpdateUserInfo","sagaAddBlocknote","sagaDeleteBlocknote","sagaEditBlocknote","sagaAddCard","sagaDeleteCard","sagaEditCardBody","sagaEditCardHead","sagaAddTag","sagaRemoveTag","addBlocknoteWarker","deleteBlocknoteWorker","editBlocknoteWorker","addCardWorker","deleteCardWorker","editCardHeadWorker","editCardBodyWorker","addTagWorker","removeTagWorker","watcher","withFetchCreator","a","fetch","url","constructor","postBlocknote","json","call","result","put","console","log","takeEvery","logoutWorker","loginWorker","registrationWorker","updateUserInfoWorker","logoutFetch","delay","loginFetch","email","event","target","value","password","method","headers","body","JSON","stringify","response","status","setStatus","localStorage","setItem","token","registrationFetch","updateUserFetch","updatedUser","newInfo","setForEdit","preloadedState","window","getItem","sagaMiddleware","createSagaMiddleware","store","createStore","parse","composeWithDevTools","applyMiddleware","reduxThunk","run","all","blocknotesSaga","usersSaga","NavigationBar","useSelector","className","style","textDecoration","color","fontSize","to","fetchCreator","FormBlocknotes","dispatch","useDispatch","e","preventDefault","name","about","onSubmit","required","minLength","placeholder","BlocknoteCard","find","useState","forEdit","src","img","alt","defaultValue","backgroundColor","onClick","deleteThisBlocknote","ListBlocknotes","blocknote","PageBlocknotes","AddCard","addNewCard","TagsForCardsList","info","useParams","card","tag","cardId","BlockNoteId","newTag","prompt","tags","removeTag","nanoid","Card","pageId","head","onBlur","text","deleteThisCard","Cardslist","Loader3","AllCardsList","cardsList","setCardList","setLoading","filter","indexOf","newList","setTimeout","onChange","PrivateRoute","children","rest","NoPrivateRoute","Login","loadStatus","Registration","Logout","useEffect","MyCabinet","_id","height","avatar","min","max","marginTop","length","Mainpage","App","width","minHeight","display","flexDirection","path","exact","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd72e636.chunk.js","sourcesContent":["export const UPDATE_BLOCKNOTES_BASE = 'UPDATE_BLOCKNOTES_BASE'\nexport const LOAD_BASE = \"LOAD_BASE\"\nexport const LOAD_CARDS = 'LOAD_CARDS'\nexport const LOADING = \"LOADING\"\n\nexport const LOGOUT = 'LOGOUT'\nexport const SAGALOGOUT = 'SAGALOGOUT'\n\nexport const AUTHENTICATED = 'AUTHENTICATED'\nexport const SAGAAUTHENTICATED = \"SAGAAUTHENTICATED\"\nexport const SAGAREGISTRATION = \"SAGAREGISTRATION\"\n\nexport const UPDATE_USERINFO = \"UPDATE_USERINFO\"\nexport const SAGA_UPDATE_USERINFO = 'SAGA_UPDATE_USERINFO'\n\nexport const CHANGE_BLOCKNOTESLIST = 'CHANGE_BLOCKNOTESLIST'\nexport const SAGA_CHANGE_BLOCKNOTELIST = 'SAGA_CHANGE_BLOCKNOTELIST'\n\nexport const DELETE_BLOCKNOTE = 'DELETE_BLOCKNOTE'\nexport const SAGA_DELETE_BLOCKNOTE = 'SAGA_DELETE_BLOCKNOTE'\n\nexport const EDIT_BLOCKNOTE = \"EDIT_BLOCKNOTE\"\nexport const SAGA_EDIT_BLOCKNOTE = \"SAGA_EDIT_BLOCKNOTE\"\n\nexport const ADD_CARD = \"ADD_CARD\"\nexport const SAGA_ADD_CARD = \"SAGA_ADD_CARD\"\n\nexport const UPDATE_BLOCKNOTE_AND_CARDS = \"UPDATE_BLOCKNOTE_AND_CARDS\"\nexport const SAGA_DELETE_CARD = \"SAGA_DELETE_CARD\"\nexport const SAGA_EDIT_CARD_BODY = \"SAGA_EDIT_CARD_BODY\"\nexport const SAGA_EDIT_CARD_HEAD = \"SAGA_EDIT_CARD_HEAD\"\nexport const SAGA_ADD_TAG = 'SAGA_ADD_TAG'\nexport const SAGA_REMOVE_TAG = 'SAGA_REMOVE_TAG'\n","import { CHANGE_BLOCKNOTESLIST,SAGAAUTHENTICATED, AUTHENTICATED, DELETE_BLOCKNOTE, EDIT_BLOCKNOTE, LOGOUT, UPDATE_BLOCKNOTE_AND_CARDS, UPDATE_USERINFO, LOADING, SAGALOGOUT, SAGAREGISTRATION, SAGA_UPDATE_USERINFO } from \"../actions/actionstypes\"\n\nconst notesReducer = (state, action) => {\n  \n  switch (action.type) {\n\n    case LOADING: {\n      return {\n        ...state,\n        loading: action.payload\n      }\n    }\n\n    case SAGA_UPDATE_USERINFO: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n\n    case SAGAREGISTRATION: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n\n    case SAGAAUTHENTICATED: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n\n    case SAGALOGOUT: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n\n    case UPDATE_USERINFO:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          username: action.payload.username,\n          firstname: action.payload.firstname,\n          lastname: action.payload.lastname,\n          age: action.payload.age,\n          aboutMe: action.payload.aboutMe,\n        },\n        loading: false\n      }\n\n    case UPDATE_BLOCKNOTE_AND_CARDS: \n    return {\n      ...state,\n      user: {\n        ...state.user,\n        cards: action.payload.cards,\n        blocknotes: state.user.blocknotes.map(bl => bl.id !== action.payload.blocknotes.id ? bl : action.payload.blocknotes)\n      }\n    }\n\n    case LOGOUT :\n      return {\n        isAuth: false,\n        user: null,\n        loading: false\n      }\n\n    case AUTHENTICATED:\n      return {\n        ...state,\n        isAuth: true,\n        loading: false,\n        user: action.payload.user\n      }\n\n    case CHANGE_BLOCKNOTESLIST: \n  return {\n    ...state,\n    user: {\n      ...state.user,\n      blocknotes: action.payload.blocknotes,\n      cards: action.payload.cards\n    }\n  }\n\n  case DELETE_BLOCKNOTE:\n    return {\n      ...state,\n      user: {\n        ...state.user,\n        blocknotes: action.payload.blocknotes,\n        cards: action.payload.cards\n      }\n    }\n\n  \n    case EDIT_BLOCKNOTE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          blocknotes: state.user.blocknotes.map(bl => bl.id !== action.payload.id ? bl : action.payload)\n        }\n      }\n  \n  default:\n    return state\n  }\n}\n\nexport default notesReducer\n","import { SAGA_DELETE_CARD, CHANGE_BLOCKNOTESLIST,SAGAAUTHENTICATED, ADD_CARD, AUTHENTICATED, DELETE_BLOCKNOTE, EDIT_BLOCKNOTE, LOGOUT, UPDATE_BLOCKNOTE_AND_CARDS, UPDATE_USERINFO, LOADING, SAGALOGOUT, SAGAREGISTRATION, SAGA_UPDATE_USERINFO, SAGA_CHANGE_BLOCKNOTELIST, SAGA_DELETE_BLOCKNOTE, SAGA_EDIT_BLOCKNOTE, SAGA_ADD_CARD, SAGA_EDIT_CARD_BODY, SAGA_EDIT_CARD_HEAD, SAGA_REMOVE_TAG } from \"./actionstypes\"\n\n\nexport const changeBlocknotesList = payload => ({\n  type: CHANGE_BLOCKNOTESLIST,\n  payload\n})\n\nexport const editBlocknote = payload => ({\n  type: EDIT_BLOCKNOTE,\n  payload\n})\n\n\nexport const deleteBlocknote = payload => ({\n  type: DELETE_BLOCKNOTE,\n  payload\n})\n\nexport const addCard = payload => ({ \n  type: ADD_CARD,\n  payload\n})\n\nexport const authenticated = payload => ({\n  type: AUTHENTICATED,\n  payload,\n})\n\nexport const logout = () => ({\n  type: LOGOUT,\n})\n\nexport const updateBlocknotesAndCards = payload => ({\n  type: UPDATE_BLOCKNOTE_AND_CARDS,\n  payload\n})\n\nexport const updateUserInfo = payload => ({\n  type: UPDATE_USERINFO,\n  payload\n})\n\nexport const loading = (payload) => ({\n  type: LOADING,\n  payload\n})\n\nexport const sagaAuthenticated = payload => ({\n  type: SAGAAUTHENTICATED,\n  payload,\n})\n\nexport const sagalogout = () => ({\n  type: SAGALOGOUT\n})\n\nexport const sagaRegistration = (payload) => ({\n  type: SAGAREGISTRATION,\n  payload\n})\n\nexport const sagaUpdateUserInfo = payload => ({\n  type: SAGA_UPDATE_USERINFO,\n  payload\n})\n\nexport const sagaAddBlocknote = payload => ({\n  type: SAGA_CHANGE_BLOCKNOTELIST,\n  payload\n})\n\nexport const sagaDeleteBlocknote = payload => ({\n  type: SAGA_DELETE_BLOCKNOTE,\n  payload\n})\n\nexport const sagaEditBlocknote = payload => ({\n  type: SAGA_EDIT_BLOCKNOTE,\n  payload\n})\n\nexport const sagaAddCard = payload => ({\n  type: SAGA_ADD_CARD,\n  payload\n})\n\nexport const sagaDeleteCard = payload => ({\n  type: SAGA_DELETE_CARD,\n  payload\n})\n\nexport const sagaEditCardBody = payload => ({\n  type: SAGA_EDIT_CARD_BODY,\n  payload\n})\n\nexport const sagaEditCardHead = payload => ({\n  type: SAGA_EDIT_CARD_HEAD,\n  payload\n})\n\nexport const sagaAddTag = payload => ({\n  type: SAGA_ADD_CARD,\n  payload\n})\n\nexport const sagaRemoveTag = payload => ({\n  type: SAGA_REMOVE_TAG,\n  payload\n})\n","import { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport { changeBlocknotesList, deleteBlocknote, editBlocknote, updateBlocknotesAndCards } from \"./actions/actions\";\nimport { SAGA_ADD_CARD, SAGA_ADD_TAG, SAGA_CHANGE_BLOCKNOTELIST, SAGA_DELETE_BLOCKNOTE, SAGA_DELETE_CARD, SAGA_EDIT_BLOCKNOTE, SAGA_EDIT_CARD_BODY, SAGA_EDIT_CARD_HEAD, SAGA_REMOVE_TAG } from \"./actions/actionstypes\";\n\nconst withFetchCreator = async (payload) => {\n  const postBlocknote = await fetch(payload.url, payload.constructor)\n  return await postBlocknote.json()\n}\n\nfunction* addBlocknoteWarker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(changeBlocknotesList(result))\n}\n\nfunction* deleteBlocknoteWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(deleteBlocknote(result))\n}\n\nfunction* editBlocknoteWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield console.log('dpsadpsadposad')\n  yield console.log(result)\n  yield put(editBlocknote(result))\n}\n\nfunction* addCardWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(updateBlocknotesAndCards(result))\n}\n\nfunction* deleteCardWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(updateBlocknotesAndCards(result))\n}\n\nfunction* editCardHeadWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(updateBlocknotesAndCards(result))\n}\n\nfunction* editCardBodyWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(updateBlocknotesAndCards(result))\n}\n\nfunction* addTagWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(updateBlocknotesAndCards(result))\n}\n\n\nfunction* removeTagWorker(action) {\n  const result = yield call(withFetchCreator, action.payload)\n  yield put(updateBlocknotesAndCards(result))\n}\n\nexport default function* watcher() {\n  yield takeEvery(SAGA_CHANGE_BLOCKNOTELIST, addBlocknoteWarker)\n  yield takeEvery(SAGA_DELETE_BLOCKNOTE, deleteBlocknoteWorker)\n  yield takeEvery(SAGA_EDIT_BLOCKNOTE, editBlocknoteWorker)\n  yield takeEvery(SAGA_ADD_CARD, addCardWorker)\n  yield takeEvery(SAGA_DELETE_CARD, deleteCardWorker)\n  yield takeEvery(SAGA_EDIT_CARD_HEAD, editCardHeadWorker)\n  yield takeEvery(SAGA_EDIT_CARD_BODY, editCardBodyWorker)\n  yield takeEvery(SAGA_ADD_TAG, addTagWorker)\n  yield takeEvery(SAGA_REMOVE_TAG, removeTagWorker)\n}\n","import { call, delay, put, takeEvery } from \"@redux-saga/core/effects\";\nimport { authenticated, loading, logout, updateUserInfo } from \"./actions/actions\";\nimport { SAGAAUTHENTICATED, SAGALOGOUT, SAGAREGISTRATION, SAGA_UPDATE_USERINFO } from \"./actions/actionstypes\";\n\n\nconst logoutFetch = () => fetch('/logout')\nfunction* logoutWorker() {\n  yield delay(1500)\n  yield call(logoutFetch)\n  yield put(logout())\n}\n\nasync function loginFetch(payload) {\n  \n  const email = payload.event.target.email.value\n  const password = payload.event.target.password.value\n\n  const response = await fetch('/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ \n      email,\n      password\n    })\n  })\n\n  const result =  await response.json()\n  if (result.status === false) {\n    payload.setStatus(true)\n    return result\n  } else {\n    return result\n  }\n}\n\nfunction* loginWorker(action) {\n  yield delay(1500)\n  const result = yield call(loginFetch, action.payload)\n  if (result.status !== false) {\n    yield put(authenticated(result))\n    yield localStorage.setItem('token', result.token)\n  } else {\n    yield put(loading(false))\n}\n}\n\nasync function registrationFetch (payload) {\n  const username = payload.event.target.username.value\n  const email = payload.event.target.email.value\n  const password = payload.event.target.password.value\n\n  const response = await fetch('/registration', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ \n      username,\n      email,\n      password\n    })\n  })\n\nconst result = await response.json()\nif(result.status === false) {\n  payload.status(true)\n  return result\n} return result\n}\n\nfunction* registrationWorker(action) {\nyield delay(1500)\nconst result = yield call(registrationFetch, action.payload)\nif (result.status === false) {\nyield put(loading(false))\n} else {\n  yield put(authenticated(result))\n}\n}\n\nasync function updateUserFetch(payload) {\n  const username = payload.event.target.username.value\n  const firstname = payload.event.target.firstname.value\n  const lastname = payload.event.target.lastname.value\n  const age = payload.event.target.age.value\n  const aboutMe = payload.event.target.aboutMe.value\n\n  const updatedUser = await fetch('/updateUser', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ \n      username,\n      firstname,\n      lastname,\n      age,\n      aboutMe,\n      id: payload.id\n    })\n  })\n  const newInfo = await updatedUser.json()\n  payload.setForEdit(false)\n  return newInfo\n}\n\nfunction* updateUserInfoWorker (action) {\n  yield delay(1500)\n  const newInfo = yield call(updateUserFetch, action.payload)\n  yield put(updateUserInfo(newInfo))\n}\n\n// ------------------------------------------------------\n\n\nexport default function* watcher() {\n\n  yield takeEvery(SAGALOGOUT, logoutWorker)\n  yield takeEvery(SAGAAUTHENTICATED, loginWorker)\n  yield takeEvery(SAGAREGISTRATION, registrationWorker)\n  yield takeEvery(SAGA_UPDATE_USERINFO, updateUserInfoWorker)\n}\n\n","  import {createStore, applyMiddleware} from 'redux'\n  import {composeWithDevTools} from 'redux-devtools-extension'\n  import notesReducer from '../reducers/notesReducer';  \n  import reduxThunk from 'redux-thunk'\n  import createSagaMiddleware from 'redux-saga'\n  import {all} from 'redux-saga/effects'\n  import blocknotesSaga from '../blocknotes-saga'\n  import usersSaga from '../users-saga'\n\n  const preloadedState = window.localStorage.getItem('state') || '{\"isAuth\": false, \"user\":{}, \"loading\": false}';\n\n  const sagaMiddleware = createSagaMiddleware()\n\n  const store = createStore(notesReducer, JSON.parse(preloadedState), composeWithDevTools(\n    applyMiddleware(\n      reduxThunk,\n      sagaMiddleware \n    )\n  ))\n\n  sagaMiddleware.run(\n    function* () {\n      yield all (\n        [\n          blocknotesSaga(),\n          usersSaga()\n        ]\n      )\n    }\n )\n  export default store\n  ","import { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\"\n\n\nexport default function NavigationBar() {\n\n  const state = useSelector((store) => store)\n\n  return (\n\n    <nav className=\"navigationBar\" >\n      \n      {state.isAuth ?\n      <>\n      <div className=\"welcomNav\">Добро пожаловать!</div>\n      <div className=\"welcomNav welcomNavUser\" >{state.user.username}</div>\n      <Link className=\"linklink\" style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/' >\n        <div className= \"navButton\">\n          Главная страница\n        </div>\n      </Link>        \n      {/* <Link className=\"linklink\"  style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/mycabinet' >\n        <div className= \"navButton\" >\n          Личный кабинет \n        </div>\n      </Link>   */}\n      <Link className=\"linklink\"  style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/blocknotes' >\n        <div className= \"navButton\" >\n          Мои блокноты \n        </div>\n      </Link>        \n      <Link className=\"linklink\" style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/allnotes' >\n        <div className= \"navButton\">\n          Все мои заметки\n        </div>\n      </Link>\n      <Link className=\"linklink\" style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/logout' >\n        <div className= \"navButton\">\n          Выход\n        </div>\n      </Link>\n      </>\n        : \n      <>\n      <Link className=\"linklink\" style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/' >\n        <div className= \"navButton\">\n          Главная страница\n        </div>\n      </Link>        \n      <Link className=\"linklink\"  style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/registration' >\n        <div className= \"navButton\" >\n          Регистрация \n        </div>\n      </Link>        \n      \n      <Link className=\"linklink\" style={{textDecoration: 'none', color: 'white', fontSize: '13pt'}} to='/login' >\n        <div className= \"navButton\">\n          Авторизация\n        </div>\n      </Link>        \n        </>\n        }\n    </nav>\n\n  )\n}\n","export const fetchCreator = (url, method, body) => {\n  return {url: url, constructor: {method, headers: {'Content-Type': 'application/json'}, body: JSON.stringify(body)\n  }}\n}\n","import { sagaAddBlocknote } from \"../../redux/actions/actions\"\nimport { useDispatch } from \"react-redux\"\nimport { fetchCreator } from \"../fetchCreator\"\n\n\nexport default function FormBlocknotes() {\n\n  const dispatch = useDispatch()\n\n  async function newBlocknote (e) {\n    e.preventDefault()\n    const name = e.target.name.value\n    const about = e.target.about.value\n    dispatch(sagaAddBlocknote(fetchCreator('/addBlocknote', \"POST\", {name, about})))\n  }\n\n  return (\n    <div>\n      <form className='addblocknote' method=\"POST\" onSubmit={newBlocknote} >\n        <input required minLength='3' type=\"text\" name=\"name\" placeholder=\"Название блокнота\" />\n        <textarea required minLength='3' type=\"text\" name=\"about\" placeholder=\"Небольшое описание блокнота\" />\n        <button className=\"addBut\" >Создать</button>\n      </form>\n    </div>\n  )\n}\n// &#10004;\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { sagaDeleteBlocknote, sagaEditBlocknote } from '../../redux/actions/actions';\nimport { fetchCreator } from '../fetchCreator';\n\n\nexport default function BlocknoteCard({id}) {\n\n  const state = useSelector((store) => store.user.blocknotes.find(bl => bl.id === id))\n  const dispatch = useDispatch()\n\n  const [forEdit, setForEdit] = useState(true)\n\n  async function deleteThisBlocknote() {\n    dispatch(sagaDeleteBlocknote(fetchCreator('/deleteBlocknote', 'DELETE', {id: id})))\n  }\n\n  async function editAbout(e) {\n    e.preventDefault()\n    const name = e.target.name.value\n    const about = e.target.about.value\n    dispatch(sagaEditBlocknote(fetchCreator('/editBlocknote', 'PUT', {id, name, about})))\n    setForEdit(!forEdit)\n  }\n\n  return (\n    <div className=\"oneFullCard\" >\n    <div className=\"BlocknoteCard\">\n    <Link style={{textDecoration: 'none', color: 'black'}} to={`/blocknotes/${state.id}`}> \n      <div>\n        <img className=\"cardimg\" src={state.img} alt='' />\n      </div>\n      </Link>\n       {(forEdit) ?\n       <>\n        <div className=\"cardName\" >\n          {state.name}\n        </div>\n        <div className=\"cardAbout\">\n          {state.about}\n        </div>\n        </> : \n        <form className=\"editForm\" onSubmit={editAbout} >\n          <input  name='name' defaultValue={state.name} />\n          <input  name='about' defaultValue={state.about} />\n          <button type='submit' style={{backgroundColor: 'blue', color: 'white'}} >Внести изменения</button>\n        </form>\n        }\n      </div>\n        <div className=\"blocknoteCardButtonsBlock\">\n        <button className=\"blocknoteCardButton\" onClick={() => deleteThisBlocknote()}> Удалить блокнот </button>\n        <button className=\"blocknoteCardButton\" onClick={() => setForEdit(!forEdit)}> Изменить описание </button>\n        </div>\n    </div>\n  )\n}\n","import { useSelector } from \"react-redux\"\nimport BlocknoteCard from \"./BlocknoteCard\"\n\n\nexport default function ListBlocknotes() {\n\n  const state = useSelector((store) => store.user.blocknotes)\n\n  return state ? (\n    <div className=\"blocknotesList\" >\n      {state.map(blocknote => {\n        return <BlocknoteCard key={blocknote.id} id={blocknote.id} />\n      })}\n    </div>\n  ) : null\n}\n","import FormBlocknotes from \"./FormBlocknotes\";\nimport ListBlocknotes from \"./ListBlocknotes\";\n\nexport default function PageBlocknotes() {\n  return (\n    <div className=\"blocknotesPage\" >\n      <FormBlocknotes />\n      <ListBlocknotes />\n    </div>\n  )\n}\n","import { useDispatch } from \"react-redux\"\nimport { sagaAddCard } from \"../../redux/actions/actions\"\nimport { fetchCreator } from \"../fetchCreator\"\n\nexport default function AddCard({id}) {\n  const dispatch = useDispatch()\n\n  async function addNewCard() {\n    dispatch(sagaAddCard(fetchCreator('/addCard', 'POST', {id: id})))\n  }\n\n  return (\n    <div className=\"cardBlock forButton\" >\n    <button className=\"addButtonRed\"  onClick={() => addNewCard()}>+</button>\n    </div>\n  )\n}\n","import { useParams } from \"react-router\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {nanoid} from 'nanoid'\nimport { sagaAddTag, sagaRemoveTag } from \"../../redux/actions/actions\";\nimport { fetchCreator } from \"../fetchCreator\";\n\n\nexport default function TagsForCardsList({info}) {\n  const {id} = useParams()\n  const dispatch = useDispatch()\n  const state = useSelector((store) => store.user.blocknotes.find(bl => bl.id === id).cards.find(card => card.id === info.id))\n\n  async function removeTag(tag) {\n    dispatch(sagaRemoveTag(fetchCreator('/addTag', 'DELETE', {cardId: info.id, BlockNoteId: id, tag})))\n  }\n\n  async function newTag() {\n    let newTag = prompt('add your tag pls', '')\n    dispatch(sagaAddTag(fetchCreator('/addTag', 'POST', {cardId: info.id, BlockNoteId: id, tag: newTag})))\n  }\n\n  return (\n    <div className=\"tagsBlock\" >\n    {state.tags.map( tag => {\n      return (\n        <div className='tag' key={nanoid()} >\n          {tag}\n          <button onClick={() => removeTag(tag)} className=\"tagButton\">x</button>\n        </div>\n      )\n    })}\n    <button className=\"tagAddButton\" onClick={() => newTag()} >+</button>\n    </div>\n  )\n}\n","import { useParams } from \"react-router\";\nimport TagsForCardsList from \"./TagsForCardsList\";\nimport { useDispatch } from \"react-redux\";\nimport { sagaDeleteCard, sagaEditCardBody, sagaEditCardHead } from \"../../redux/actions/actions\";\nimport { fetchCreator } from \"../fetchCreator\";\n\nexport default function Card({ info }) {\n  const { id } = useParams();\n  const dispatch = useDispatch()\n\nasync function deleteThisCard() {\n  dispatch(sagaDeleteCard(fetchCreator('/deleteCard', 'DELETE', {id: info.id , pageId: id})))\n}\n\nasync function editCardBody(e) {\n  dispatch(sagaEditCardBody(fetchCreator('/editCardBody', 'PUT', {id: info.id, pageId: id, newInfo: e.target.value})))\n}\n\nasync function editCardHead(e) {\n  dispatch(sagaEditCardHead(fetchCreator('/editCardHead', 'PUT', {id: info.id, pageId: id, newInfo: e.target.value})))\n}\n\n  return (\n    <div className=\"cardBlock\">\n      <input defaultValue={info.head} name=\"cardHead\" onBlur={editCardHead} />\n      <textarea defaultValue={info.text} onBlur={editCardBody} />\n      <TagsForCardsList\n        key={info.id}\n        info={{\n          tags: info.tags,\n          id: info.id,\n        }}\n      />\n      <div className=\"buttonsBlock\">\n        <button className=\"deleteCardButton\" onClick={() => deleteThisCard()}>\n          Удалить\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useSelector } from \"react-redux\"\nimport { useParams } from \"react-router\"\nimport AddCard from \"./AddCard\"\nimport Card from \"./Card\"\n\nexport default function Cardslist() {\n  const {id} = useParams()\n  const state = useSelector((store) => store.user.blocknotes.find(bl => bl.id === id).cards)\n\n  return (\n    (state) ? \n    <div className=\"bodyOfList\" >\n      {state.map( card => {\n        return <Card key={card.id} info={card} />\n      })}\n      <AddCard id={id} />\n    </div>\n   : null\n  )\n}\n","import React from 'react'\n\nexport default function Loader3() {\n  return (\n    <div className=\"bouncer\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n}\n","import {  useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport Loader3 from './Loader3'\n\nexport default function AllCardsList() {\n\nconst state = useSelector((store) => store.user.cards)\nconst [cardsList, setCardList] = useState(state)\nconst [loading, setLoading] = useState(true)\n\nasync function changeTextForFind(e) {\n  let text = await e.target.value\n  let newList = await state.filter(card => card.text.indexOf(text) !== -1)\n  setCardList(newList)\n}\n  setTimeout(() => {\n    setLoading(false)\n  }, 1000);\n  return cardsList && !loading ? (\n    \n    <div className=\"textCardsPage\" >\n      <input onChange={changeTextForFind} className=\"findInp\" placeholder=\"Введи текст для поиска\" name=\"forFind\"  />\n      <div className=\"cardsContainer\" >\n      {cardsList.map(card => {\n        return (\n         <div className=\"textCard\"  key={card.id} > \n          <div className=\"textCardHead\" >{card.head}</div>\n          <div className=\"textCardBody\" >{card.text}</div>\n          </div>\n        )\n      })}\n      </div>\n    </div>\n  ) :\n  <div className=\"textCardsPage\"  >\n    <Loader3 />\n  </div>\n}\n","import{Redirect, Route} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\n\nexport default function PrivateRoute({children, ...rest}) {\n\n  const isAuth = useSelector(state => state.isAuth)\n\n  return <Route {...rest} >\n     \n      {isAuth ?\n      children :\n      <Redirect to=\"/login\" />}\n\n  </Route>\n}\n","import{Redirect, Route} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\n\nexport default function NoPrivateRoute({children, ...rest}) {\n\n  const isAuth = useSelector(state => state.isAuth)\n\n  return <Route {...rest} >\n     \n      {!isAuth ?\n      children :\n      <Redirect to=\"/\" />}\n\n  </Route>\n}\n","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Loader3 from \"./Loader3\"\nimport { sagaAuthenticated } from \"../redux/actions/actions\"\n\n\nexport default function Login() {\n\n  const loadStatus = useSelector((store) => store.loading)\n\n  const [status, setStatus] = useState(false)\n  const dispatch = useDispatch()\n\nasync function auth(e) {\n  e.preventDefault()\n    dispatch(sagaAuthenticated({event: e, setStatus}))\n}\n\n  return !loadStatus ?(\n    <div className=\"middleOfScreen\" >\n      <form className=\"loginform\" action=\"\" method=\"POST\" id=\"regform\" onSubmit={auth} >\n        <input required minLength=\"1\" name=\"email\" type=\"email\" placeholder=\"email\" className=\"reginput\" />\n        <input required minLength=\"6\" type='password' name=\"password\"placeholder=\"password\" className=\"reginput\"/>\n        <button type=\"submit\"> Войти </button>\n    </form>\n    {status ? \n    <div>Вы ввели неверные данные!</div> : null }\n  </div>\n  ) : \n  <div className=\"forloadincabinet\" >\n  <div className=\"loadmypage\" >\n    <Loader3 />\n    </div>\n    </div>\n}\n","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { sagaRegistration } from \"../redux/actions/actions\"\nimport Loader3 from './Loader3'\n\nexport default function Registration() {\n\n  const dispatch = useDispatch()\n\n  const [status, setStatus] = useState(false)\n  \n  const loadStatus = useSelector(store => store.loading)\n\nasync function registration(e) {\n  dispatch(sagaRegistration({event:e, setStatus}))\n}\n\n  return !loadStatus ? (\n    <div className=\"middleOfScreen\" >\n      <form action=\"\" method=\"POST\" id=\"regform\" onSubmit={registration} >\n        <input required minLength=\"6\" type=\"text\" name=\"username\" placeholder=\"name\" className=\"reginput\"/>\n        <input required minLength=\"1\" name=\"email\" type=\"email\" placeholder=\"email\" className=\"reginput\" />\n        <input required minLength=\"6\"  name=\"password\" type=\"password\" placeholder=\"password\" className=\"reginput\"/>\n        <button type=\"submit\"> Зарегистрироваться </button>\n    </form>\n    {status ? \n    <div>Такой пользователь уже существует!</div> : null }\n  </div>\n  ) : \n  <div className=\"forloadincabinet\" >\n  <div className=\"loadmypage\" > \n  <Loader3 />\n  </div>\n  </div>\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { sagalogout } from '../redux/actions/actions'\nimport Loader3 from './Loader3'\n\n\nexport default function Logout() {\n\n  const dispatch = useDispatch()\n\n  useEffect( () => {\n    dispatch(sagalogout())\n  })\n\n  return (\n   <div className=\"middleOfScreen\" >\n    <Loader3 />\n    </div>\n  )\n}\n","import { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Loader3 from './Loader3'\nimport { sagaUpdateUserInfo } from \"../redux/actions/actions\"\n\nexport default function MyCabinet() {\n\n  const dispatch = useDispatch()\n  \n  const state = useSelector((store) => store.user)\n  const loadStatus = useSelector((store) => store.loading)\n\n  const [forEdit, setForEdit] = useState(false)\n\nasync function editUserInfo(e) {\n  e.preventDefault()\n  dispatch(sagaUpdateUserInfo({event: e, setForEdit, id: state._id}))\n  setForEdit(false)\n}\n\n  return !loadStatus ? (\n    <div className=\"myCabinetPage\" >\n\n      <div className=\"infoBlock\" >\n\n        <div className=\"imgBlock\">\n          <img style={{height: '400px'}} src={state.avatar} alt=\"\"/>\n          <button>Изменить фото</button>\n        </div>\n\n        {!forEdit ? \n      \n    <div className=\"persInform\">\n      <div className=\"dinamicInf\">\n        <p>Username: {state.username}</p>\n        <p>Имя: {state.firstname}</p>\n        <p>Фамилия: {state.lastname}</p>\n        <p>Возвраст: {state.age}</p>\n        <p>Обо мне: {state.aboutMe}</p>\n        <button onClick={() => setForEdit(true)} >Изменить</button>\n      </div>\n        <div className=\"staticInf\" >\n        <p>Количество блокнотов: {state.blocknotes.length}</p>\n        <p>Количество заметок: {state.cards.length}</p>\n        <p>Персональный ID:{state._id} </p>\n        </div>\n        </div>\n      :\n      <form className=\"formForChange\" method=\"POST\" onSubmit={editUserInfo} >\n        <input defaultValue={state.username} placeholder=\"Новый никнейм\" name=\"username\" />\n        <input defaultValue={state.firstname} placeholder=\"Новое имя пользователя\" name=\"firstname\" />\n        <input defaultValue={state.lastname} placeholder=\"Новая фамилия\" name=\"lastname\" />\n        <input defaultValue={state.age} type=\"number\" min='15' max='99' placeholder=\"Твой возраст\" name=\"age\" />\n        <textarea defaultValue={state.aboutMe} placeholder=\"Новое описание\" name=\"aboutMe\" />\n        <button type='submit' style={{ marginTop: '25px'}} >Сохранить</button>\n        <button onClick={() => setForEdit(false)} >Отменить</button>\n      </form>\n        }\n\n\n        \n      </div>\n\n    </div>\n  ) \n  : \n  <div className=\"forloadincabinet\" >\n  <div className=\"loadmypage\" >\n    <Loader3 />\n    </div>\n    </div>\n}\n\n\n","import React from 'react'\n\nexport default function Mainpage() {\n  return (\n    <div className='mainpage' >\n      <h1>Приветствую, мой дорогой друг!</h1>\n      <h2>Здесь ты можешь создать собственные заметки, распределяя их по блокнотам,</h2>\n      <h2>а внесенные изменения сохраняются автоматически</h2>\n\n    </div>\n  )\n}\n","import {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport store from '../redux/store/store'\nimport NavigationBar from './NavigationBar'\nimport PageBlocknotes from './blocknotes/PageBlocknotes'\nimport Cardslist from './blocknotes/Cardslist'\nimport '../style.css'\nimport'../loader3.css'\nimport AllCardsList from './AllCardsList'\nimport PrivateRoute from './PrivateRoute'\nimport NoPrivateRoute from './NoPrivateRoute'\nimport Login from './Login'\nimport Registration from './Registration'\nimport Logout from './Logout'\nimport MyCabinet from './MyCabinet'\nimport {Provider} from 'react-redux'\nimport Mainpage from './Mainpage'\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n\n      <BrowserRouter>\n        <div style={{width: '100%', minHeight: '100vh', display: \"flex\", flexDirection: 'row'}} >\n    \n          <NavigationBar />\n          <Switch>\n          <PrivateRoute path=\"/blocknotes/:id\">\n            <Cardslist />\n          </PrivateRoute>\n          <Route exact path=\"/\" >\n          <Mainpage />\n          </Route>\n          <PrivateRoute exact path=\"/blocknotes\" >\n            <PageBlocknotes />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/mycabinet\" >\n            <MyCabinet />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/allnotes\" >\n            <AllCardsList />\n          </PrivateRoute>\n          <NoPrivateRoute path='/login' >\n            <Login />\n          </NoPrivateRoute>\n          <NoPrivateRoute path='/registration' >\n            <Registration />\n          </NoPrivateRoute>\n          <PrivateRoute path='/logout' >\n            <Logout />\n          </PrivateRoute>          \n          </Switch>\n        </div>\n      </BrowserRouter>\n\n    </Provider> \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport store from './redux/store/store';\n\nstore.subscribe(() => {\n  const state = store.getState()\n  window.localStorage.setItem('state', JSON.stringify(state))\n})\n\nReactDOM.render (\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n      document.getElementById('root')\n);\n\n"],"sourceRoot":""}